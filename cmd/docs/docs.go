// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/createJwt": {
            "post": {
                "description": "Returns jwt tokens and checks verification code",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Returns jwt tokens",
                "parameters": [
                    {
                        "description": "email and verification code",
                        "name": "email_and_code",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagger.GetJWTParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/getNewJWT": {
            "post": {
                "description": "Refresh jwt tokens",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Returns jwt tokens",
                "parameters": [
                    {
                        "description": "refresh token",
                        "name": "refresh_token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagger.GetNewJWTParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "ping-pong))",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ping"
                ],
                "summary": "Ping-pong",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/sendCode": {
            "post": {
                "description": "Returns a verification code for auth",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Returns a verification code",
                "parameters": [
                    {
                        "description": "email",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagger.SendCodeParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "swagger.GetJWTParams": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "email": {
                    "type": "string",
                    "example": "some@some.com"
                }
            }
        },
        "swagger.GetNewJWTParams": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NDMxODYyMzgsImlhdCI6MTc0MDU5NDIzOCwic3ViIjoyLCJ0eXBlIjoicmVmcmVzaCJ9.04yFALX79gM-r9Fj2ZVlUaY0oe3JW-swSzMvt1Sn5bId5rAEiibPghn4QqD3YHWySQnC9PE896j2fvpidEPetP3hZJ9ZhvJdhiNTn-2XVVkH8xyFCQyhB5_BK4dFnDxA2lbkGR14norjHbmokzWBm-ynC132Kh2LN6QmKJpn72t3Xo7ZCTmF4TMCTrfr_ET5zqKKpk343qx1_MefYEvfX9ZTFUC8QvasxfM2wFfbQCkco-qvMC-eAmI3BoIQtXPBnjrY8ifDj54nQi9qgNHX8H7Tzu5tS7AUdkwrkhGU-7oDkY1dYQobBugEL4CAD6TNCwaeduzSTMMB3K_TsgIHHw"
                }
            }
        },
        "swagger.SendCodeParams": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "some@some.com"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "StudBrige API",
	Description:      "Some description",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
